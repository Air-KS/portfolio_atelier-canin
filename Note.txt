package utilisé avec yarn

yarn install : Cette commande installe toutes les dépendances listées dans le fichier package.json et génère un fichier yarn.lock si nécessaire.

yarn init : Cette commande crée un nouveau fichier package.json en te posant une série de questions pour configurer ton projet.

yarn add : Cette commande ajoute une dépendance à ton projet et met à jour le fichier package.json ainsi que le fichier yarn.lock.

yarn upgrade : Cette commande met à jour toutes les dépendances vers leurs dernières versions respectant les contraintes du fichier package.json.

yarn audit : Cette commande vérifie les vulnérabilités de sécurité dans les dépendances de ton projet.

yarn version : Cette commande affiche la version actuelle de Yarn installée sur ton système. Elle peut aussi être utilisée pour gérer la version de ton projet.

yarn help : Pour obtenir une liste des commandes disponibles et une brève description de chaque commande

yarn help commande : Pour obtenir une description detailler de la commande

Migration sequelize pour les tables de la base de donnée
yarn sequelize-cli db:migrate
yarn sequelize-cli db:seed:all

Si on modifie la base de donnée et qu'on souhaite la mettre à jours sans tout effacer
yarn sequelize migration:create --name modify-ajoute-une-description     "Comme pour un commit"
yarn sequelize-cli db:migrate     pour mettre à jours les colonnes    "Comme un push"

Lancer le server une fois tout installer
node server.js

MySQL
sudo service mysql start
sudo service mysql stop
sudo service mysql restart
sudo service mysql status
mysql -u root -p

Problème liée au permissions
sudo chown -R mysql:mysql /var/run/mysqld
sudo chmod -R 755 /var/run/mysqld

Si mysql -u root -p ne fonctionne pas utilise la commande sudo mysql -u root -p et entre dans mysql
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'new_password';
FLUSH PRIVILEGES;

=== Dans la base de donnée ===
DROP DATABASE PetGroomingDB;
CREATE DATABASE PetGroomingDB;
use PetGroomingDB
select * from Register;
DESCRIBE Register;
DELETE FROM Register WHERE id = 1;
DELETE FROM Register WHERE email = 'email@gmail.com';
show tables;

Pour modifier permettre la colonne user_id optionnel, pour les personne non inscrit
ALTER TABLE Appointments MODIFY COLUMN user_id int NULL;

Recommancer le décompte au chiffre indiqué
ALTER TABLE Users AUTO_INCREMENT = 1;

Pour afficher la table sur une seul ligne (Appuyer sur les fléche droite et gauche pour deplacer)
pager less -SFX;
nopager; = Pour supprimer le formatage du styles et revenir par défaut

====================================================================================================


Comment ça fonctionne à artire de rien

On créer la base de donnée
CREATE DATABASE PetGroomingDB;

Exécute les migrations pour créer les tables
yarn sequelize-cli db:migrate
yarn sequelize-cli db:migrate --to 20240713120532-migration.js

Exécute les seeders dans l'ordre spécifié :
yarn sequelize-cli db:seed --seed 20240615-default-roles => Pour créer les roles par défaut (Client, responsable et Admin)
yarn sequelize-cli db:seed --seed 20240616-insert-admin.js => Mettre en place les Admin

Supprimer une migration précise
DELETE FROM `SequelizeMeta` WHERE name = '20240616170130-nom-migration.js';



Test les liens sur postman

Pour lister tous les rendez-vous
Get: http://localhost:3000/api/appointments

Verifier les heures disponible (Les créneaux horaires qui ne s'affichent pas sont déjà pris.)
Get : http://localhost:3000/api/appointments/available-timeslots?date=2024-07-18

Pour créer un rendez-vous (Modifie les détails d'un rendez-vous existant avec l'ID spécifié.)
Post: http://localhost:3000/api/appointments
{
  "first_name": "Prénom",
  "last_name": "Nom",
  "email": "mail@example.com",
  "phone": "0607080910",
  "appointment_time": "2024-07-18T12:00:00", (Date du rendez-vous souhaiter)
  "status": "pending"
}

Pour modifier un rendez-vous
Put : http://localhost:3000/api/appointments/id

Annuler un rendez-vous
Put http://localhost:3000/api/appointments/id/cancel

Pour supprimer un rendez-vous
Delete: http://localhost:3000/api/appointments/id
